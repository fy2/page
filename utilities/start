#!/usr/bin/env bash

# Using the lsb functions to perform the operations.
. /lib/lsb/init-functions
# Process name ( For display )
NAME="page_dev_daemon"
PAGE_DAEMON="/www/www-dev/utilities/start.sh"
PAGE_STARMAN="/www/www-dev/utilities/starman.sh"
PAGE_APPNAME="PageApp"
export PAGE_APPDIR="/www/www-dev"
# pid file for the daemon
export PAGE_PIDFILE="/www/tmp/www-dev/logs/pageapp.pid"
export PAGE_LOGDIR="/www/tmp/www-dev/logs"
export PAGE_PSGIAPP="$PAGE_APPDIR/pageapp.psgi"
export PAGE_PERLLIB="/www/perllib"
export PAGE_WORKERS=5
export PAGE_PORT=8000

STARMAN="/www/www-dev/utilities/start_starman.sh"


# If the daemon is not there, then exit.
#test -x $PAGE_DAEMON || exit 5

# If the daemon is not there, then exit.
#test -x $PAGE_STARMAN || exit 5

if [ ! -d $PAGE_APPDIR ]; then
    echo "$PAGE_APPDIR does not exist"
    exit 1
fi

check_running() {

  [ -s $PAGE_PIDFILE ] && kill -0 $(cat $PAGE_PIDFILE) >/dev/null 2>&1
}

check_compile() {

  if ( cd $PAGE_APPDIR ; perl -Ilib -M$PAGE_APPNAME -ce1 ) ; then
    return 1
  else
    return 0
  fi
}

_start() {

  /sbin/start-stop-daemon --start --pidfile $PAGE_PIDFILE \
  --chdir $PAGE_APPDIR --startas $STARMAN --user fy2 -v

  echo ""
  echo "Waiting for $PAGE_APPNAME to start..."

  for i in 1 2 3 4 ; do
    sleep 1
    if check_running ; then
      echo "$PAGE_APPNAME is now starting up"
      return 0
    fi
  done

  # sometimes it takes two tries.
  echo "Failed. Trying again..."
  /sbin/start-stop-daemon --start --pidfile $PAGE_PIDFILE \
  --chdir $PAGE_APPDIR --startas $STARMAN --user fy2 -v

  for i in 1 2 3 4 ; do
    sleep 1
    if check_running ; then
      echo "$PAGE_APPNAME is now starting up"
      return 0
    fi
  done

  return 1
}

start() {
  log_daemon_msg "Starting $PAGE_APPNAME" $STARMAN
  echo ""

  if check_running; then
    log_daemon_msg "Already running, won't do anything."
    log_end_msg 0
    exit 0
  fi

  if check_compile ; then
    log_failure_msg "Error detected; not (re-)starting."
    log_end_msg 1
  exit 1
  fi

  rm -f $PAGE_PIDFILE 2>/dev/null

  _start
  log_end_msg $?
  return $?
}

start

exit $?

